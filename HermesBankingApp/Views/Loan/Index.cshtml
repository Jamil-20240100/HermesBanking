@model List<LoanViewModel>

@{
    ViewData["Title"] = "Gestión de Préstamos";
}

<div class="container-fluid py-4">
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h2 class="card-title mb-0"><i class="bi bi-cash-stack me-2"></i> @ViewData["Title"]</h2>
            <a asp-action="AssignLoan" class="btn btn-light btn-sm shadow-sm">
                <i class="bi bi-plus-circle me-1"></i> Crear Nuevo Préstamo
            </a>
        </div>
        <div class="card-body">

            @if (ViewBag.SuccessMessage != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="bi bi-check-circle-fill me-2"></i>@ViewBag.SuccessMessage
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (ViewBag.ErrorMessage != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>@ViewBag.ErrorMessage
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="row g-3 mb-4">
                <div class="col-md-4">
                    <label for="cedulaFilter" class="form-label fw-bold">Filtrar por Cédula</label>
                    <input type="text" id="cedulaFilter" class="form-control form-control-sm shadow-sm" placeholder="Ingrese la cédula del cliente" />
                </div>
                <div class="col-md-4">
                    <label for="statusFilter" class="form-label fw-bold">Filtrar por Estado</label>
                    <select id="statusFilter" class="form-select form-select-sm shadow-sm">
                        <option value="all">Todos</option>
                        <option value="activo">Activo</option>
                        <option value="completado">Completado</option>
                        <option value="en mora">En Mora</option>
                    </select>
                </div>
            </div>

            @if (!Model.Any())
            {
                <div class="alert alert-info text-center py-4 rounded-3 shadow-sm" role="alert">
                    <h4 class="alert-heading"><i class="bi bi-info-circle-fill me-2"></i> No hay préstamos registrados.</h4>
                    <p>Parece que aún no se han asignado préstamos. ¡Crea uno nuevo para empezar!</p>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover table-striped align-middle caption-top shadow-sm rounded-3 overflow-hidden">
                        <caption class="text-start mb-2 ps-2">Lista de todos los préstamos registrados en el sistema.</caption>
                        <thead class="table-dark">
                            <tr>
                                <th scope="col">ID</th>
                                <th scope="col">Identificador</th>
                                <th scope="col">Cliente</th>
                                <th scope="col">Monto</th>
                                <th scope="col">Interés</th>
                                <th scope="col">Plazo</th>
                                <th scope="col">Cuotas Pagadas</th>
                                <th scope="col">Monto Pendiente</th>
                                <th scope="col">Estado</th>
                                <th scope="col">Fecha Creación</th>
                                <th scope="col" class="text-center">Acciones</th>
                                <th scope="col" hidden>ClientId</th>
                            </tr>
                        </thead>
                        <tbody id="loansTableBody">
                            @foreach (var item in Model)
                            {
                                <tr data-client-identification="@(item.ClientIdentificationNumber?.ToLower() ?? "")" data-status="@item.Status?.ToLower()">
                                    <td>@item.Id</td>
                                    <td>@item.LoanIdentifier</td>
                                    <td>@item.ClientFullName</td>
                                    <td>RD$ @item.Amount.ToString("N2")</td>
                                    <td>@item.InterestRate.ToString("F2")%</td>
                                    <td>@item.LoanTermMonths meses</td>
                                    <td>@item.PaidInstallments / @item.TotalInstallments</td>
                                    <td class="fw-bold">RD$ @item.PendingAmount.ToString("N2")</td>
                                    <td>
                                        @{
                                            string statusClass = "";
                                            string statusIcon = "";
                                            switch (item.Status)
                                            {
                                                case "Activo":
                                                    statusClass = "bg-success";
                                                    statusIcon = "bi bi-check-circle-fill";
                                                    break;
                                                case "Completado":
                                                    statusClass = "bg-primary";
                                                    statusIcon = "bi bi-check-all";
                                                    break;
                                                case "En Mora":
                                                    statusClass = "bg-danger";
                                                    statusIcon = "bi bi-exclamation-triangle-fill";
                                                    break;
                                                default:
                                                    statusClass = "bg-secondary";
                                                    statusIcon = "bi bi-info-circle-fill";
                                                    break;
                                            }
                                        }
                                        <span class="badge @statusClass">
                                            <i class="@statusIcon me-1"></i>@item.Status
                                        </span>
                                    </td>
                                    <td>@item.CreatedAt.ToShortDateString()</td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group" aria-label="Acciones de préstamo">
                                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info" data-bs-toggle="tooltip" data-bs-placement="top" title="Ver detalles">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a asp-action="EditInterestRate" asp-route-id="@item.Id" class="btn btn-sm btn-outline-warning" data-bs-toggle="tooltip" data-bs-placement="top" title="Editar tasa de interés">
                                                <i class="bi bi-pencil-square"></i>
                                            </a>
                                        </div>
                                    </td>
                                    <td hidden>@item.ClientIdentificationNumber</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const cedulaFilterInput = document.getElementById('cedulaFilter');
            const statusFilterSelect = document.getElementById('statusFilter');
            const loansTableBody = document.getElementById('loansTableBody');
            const tableRows = loansTableBody.querySelectorAll('tr');

            function applyFilters() {
                const cedulaFilter = cedulaFilterInput.value.toLowerCase();
                const statusFilter = statusFilterSelect.value.toLowerCase();

                tableRows.forEach(row => {
                    const clientIdentification = row.dataset.clientIdentification;
                    const status = row.dataset.status;

                    const matchesCedula = cedulaFilter === '' || (clientIdentification && clientIdentification.includes(cedulaFilter));
                    const matchesStatus = statusFilter === 'all' || status === statusFilter;

                    if (matchesCedula && matchesStatus) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            }

            cedulaFilterInput.addEventListener('keyup', applyFilters);
            statusFilterSelect.addEventListener('change', applyFilters);

            applyFilters();

            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            })
        });
    </script>
}