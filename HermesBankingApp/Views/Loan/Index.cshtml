@model List<LoanViewModel>

@{
    ViewData["Title"] = "Gestión de Préstamos";
}

<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="AssignLoan" class="btn btn-primary">Crear Nuevo Préstamo</a>
</p>

@if (ViewBag.SuccessMessage != null)
{
    <div class="alert alert-success">@ViewBag.SuccessMessage</div>
}
@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
}

<div class="form-group">
    <label for="cedulaFilter">Cédula del Cliente</label>
    <input type="text" id="cedulaFilter" class="form-control" placeholder="Filtrar por cédula" />
</div>
<div class="form-group">
    <label for="statusFilter">Estado</label>
    <select id="statusFilter" class="form-control">
        <option value="all">Todos</option>
        <option value="Activo">Activos</option>
        <option value="Completado">Completados</option>
        <option value="En Mora">En Mora</option>
    </select>
</div>

<table class="table" id="loansTable">
    <thead>
        <tr>
            <th>ID</th>
            <th>Identificador de Préstamo</th>
            <th>Cliente</th>
        <th>Monto</th>
        <th>Tasa Interés</th>
        <th>Plazo (Meses)</th>
        <th>Cuotas Pagadas</th>
        <th>Monto Pendiente</th>
        <th>Estado</th>
        <th>Fecha Creación</th>
        <th>Acciones</th>
        <th hidden>ClientId</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr data-client-identification="@(item.ClientIdentificationNumber?.ToLower() ?? "")" data-status="@item.Status?.ToLower()"> @* Convertir a minúsculas para el filtro JS *@
        <td>@item.Id</td>
        <td>@item.LoanIdentifier</td>
        <td>@item.ClientFullName</td>
        <td>@item.Amount.ToString("C")</td>
        <td>@item.InterestRate.ToString("F2")%</td>
        <td>@item.LoanTermMonths</td>
        <td>@item.PaidInstallments / @item.TotalInstallments</td>
        <td>@item.PendingAmount.ToString("C")</td>
        <td>@item.Status</td>
        <td>@item.CreatedAt.ToShortDateString()</td>
        <td>
            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Detalles</a>
            <a asp-action="EditInterestRate" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Editar Tasa</a>
        </td>
        <td hidden>@item.ClientIdentificationNumber</td>
        </tr>
        }
        </tbody>
        </table>

        @section Scripts {
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    const cedulaFilterInput = document.getElementById('cedulaFilter');
                    const statusFilterSelect = document.getElementById('statusFilter');
                    const loansTableBody = document.querySelector('#loansTable tbody');
                    const tableRows = loansTableBody.querySelectorAll('tr');

                    function applyFilters() {
                        const cedulaFilter = cedulaFilterInput.value.toLowerCase();
                        const statusFilter = statusFilterSelect.value.toLowerCase(); // Convertir a minúsculas

                        tableRows.forEach(row => {
                            const clientIdentification = row.dataset.clientIdentification; // Ya es minúsculas del Razor
                            const status = row.dataset.status; // Ya es minúsculas del Razor

                            const matchesCedula = cedulaFilter === '' || (clientIdentification && clientIdentification.includes(cedulaFilter));
                            const matchesStatus = statusFilter === 'all' || status === statusFilter;

                            if (matchesCedula && matchesStatus) {
                                row.style.display = ''; // Muestra la fila
                            } else {
                                row.style.display = 'none'; // Oculta la fila
                            }
                        });
                    }

                    // Añadir event listeners para los cambios en los filtros
                    cedulaFilterInput.addEventListener('keyup', applyFilters);
                    statusFilterSelect.addEventListener('change', applyFilters);

                    // Aplicar filtros inicialmente
                    applyFilters();
                });
            </script>
        }
