@model List<CreditCardViewModel>

@{
    ViewData["Title"] = "Gestión de Tarjetas de Crédito";
    string FormatCurrency(decimal amount)
    {
        return amount.ToString("C", new System.Globalization.CultureInfo("es-DO"));
    }
}

<h2 class="mb-4">Gestión de Tarjetas de Crédito</h2>

<div class="row mb-4 g-3 align-items-end">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }
    <div class="col-md-4">
        <label for="cedulaSearch" class="form-label">Buscar por cédula</label>
        <input id="cedulaSearch" class="form-control" placeholder="Ej: 00112345678" />
    </div>
    <div class="col-md-3">
        <label for="statusFilter" class="form-label">Filtrar por estado</label>
        <select id="statusFilter" class="form-select">
            <option value="all">Todos</option>
            <option value="active">Activas</option>
            <option value="canceled">Canceladas</option>
        </select>
    </div>
    @* <div class="col-md-2">
        <button type="button" id="applyFilterBtn" class="btn btn-primary w-100">Filtrar</button>
    </div> *@
    <div class="col-md-3 text-end">
        <a asp-action="SelectClient" class="btn btn-success w-100">Asignar tarjeta de crédito</a>
    </div>
</div>

<table class="table table-bordered table-striped">
    <thead class="table-dark">
        <tr>
            <th>Número de Tarjeta</th>
            <th>Cliente</th>
            <th>Límite</th>
            <th>Expira</th>
            <th>Adeudado</th>
            <th>Estado</th>
            <th class="text-center">Acciones</th>
            <th hidden>ClientIdentification</th>
        </tr>
    </thead>
    <tbody id="creditCardTableBody">
        @if (Model != null && Model.Any())
        {
            @foreach (var card in Model)
            {
                <tr data-client-identification="@(card.ClientIdentification?.ToLower() ?? "")" data-status="@(card.IsActive ? "active" : "canceled")">
                    <td>@card.CardId</td>
                    <td>@card.ClientFullName</td>
                    <td>@FormatCurrency(card.CreditLimit)</td>
                    <td>@card.ExpirationDate.ToString("MM/yy")</td>
                    <td>@FormatCurrency(card.TotalOwedAmount)</td>
                    <td>@(card.IsActive ? "Activa" : "Cancelada")</td>
                    <td class="text-center">
                        <a asp-action="Details" asp-route-id="@card.Id" class="btn btn-sm btn-info">Detalles</a>
                        @{
                            if (card.IsActive == true)
                            {
                                <a asp-action="Edit" asp-route-id="@card.Id" class="btn btn-sm btn-warning">Editar</a>
                                <a asp-action="ConfirmCancel" asp-route-id="@card.Id" class="btn btn-sm btn-danger">Cancelar</a>
                            }
                        }
                    </td>
                    <td hidden>@card.ClientIdentification</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7" class="text-center">No hay tarjetas encontradas.</td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Paginación">
    <ul class="pagination justify-content-center" id="paginationControls">
    </ul>
</nav>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const cedulaSearchInput = document.getElementById('cedulaSearch');
            const statusFilterSelect = document.getElementById('statusFilter');
            const creditCardTableBody = document.getElementById('creditCardTableBody');

            // Get all table rows initially
            const initialTableRows = Array.from(creditCardTableBody.querySelectorAll('tr'));

            function applyFilters() {
                const cedulaFilter = cedulaSearchInput.value.toLowerCase().trim();
                const statusFilter = statusFilterSelect.value.toLowerCase();

                let foundCards = false; // Bandera para saber si se encontró al menos una tarjeta

                initialTableRows.forEach(row => {
                    const clientIdentification = row.dataset.clientIdentification; // Already in lowercase
                    const cardStatus = row.dataset.status; // Already in lowercase

                    const matchesCedula = cedulaFilter === '' || (clientIdentification && clientIdentification.includes(cedulaFilter));
                    const matchesStatus = statusFilter === 'all' || cardStatus === statusFilter;

                    if (matchesCedula && matchesStatus) {
                        row.style.display = ''; // Show the row
                        foundCards = true;
                    } else {
                        row.style.display = 'none'; // Hide the row
                    }
                });

                // Manejar el mensaje "No hay tarjetas encontradas."
                const noDataRow = document.getElementById('noDataRow');
                if (!foundCards) {
                    if (!noDataRow) {
                        const newRow = creditCardTableBody.insertRow();
                        newRow.id = 'noDataRow';
                        const cell = newRow.insertCell(0);
                        cell.colSpan = 7; // Ajusta el colspan según el número de columnas visibles
                        cell.className = 'text-center';
                        cell.textContent = 'No hay tarjetas encontradas con los filtros aplicados.';
                    }
                } else {
                    if (noDataRow) {
                        noDataRow.remove();
                    }
                }
            }

            // Añadir event listeners para el filtrado dinámico
            cedulaSearchInput.addEventListener('keyup', applyFilters); // Se dispara con cada tecla
            statusFilterSelect.addEventListener('change', applyFilters); // Se dispara cuando cambia la selección

            // Aplicar filtros inicialmente al cargar la página
            applyFilters();
        });
    </script>
}